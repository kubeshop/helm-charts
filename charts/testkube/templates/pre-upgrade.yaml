{{- if .Values.preUpgradeHook.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Values.preUpgradeHook.name }}"
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    job-name: pre-upgrade
    {{- if .Values.global.labels }}
    {{- include "global.tplvalues.render" ( dict "value" .Values.global.labels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
    {{- if .Values.global.annotations}}
    {{- include "global.tplvalues.render" ( dict "value" .Values.global.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    {{- if .Values.preUpgradeHook.annotations }}
    {{- include "global.tplvalues.render" ( dict "value" .Values.preUpgradeHook.annotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  {{- if .Values.preUpgradeHook.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ .Values.preUpgradeHook.ttlSecondsAfterFinished }}
  {{- end }}
  template:
    metadata:
      name: "{{ .Values.preUpgradeHook.name }}"
      labels:
        app.kubernetes.io/component: mongodb
        app.kubernetes.io/name: "{{ .Values.preUpgradeHook.name }}"
        {{- if .Values.global.labels }}
        {{- include "global.tplvalues.render" ( dict "value" .Values.global.labels "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.preUpgradeHook.labels }}
        {{- include "global.tplvalues.render" ( dict "value" .Values.preUpgradeHook.labels "context" $ ) | nindent 8 }}
        {{- end }}
      {{- if or .Values.global.annotations .Values.preUpgradeHook.podAnnotations }}
      annotations:
        {{- if .Values.global.annotations}}
        {{- include "global.tplvalues.render" ( dict "value" .Values.global.annotations "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.preUpgradeHook.podAnnotations }}
        {{- include "global.tplvalues.render" ( dict "value" .Values.preUpgradeHook.podAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      serviceAccountName: "{{ .Values.preUpgradeHook.name }}"
      {{- include "global.images.renderPullSecrets" (dict "global" .Values.global "secretPath" .Values.preUpgradeHook.image.pullSecrets) | nindent 6 }}
      containers:
      - name: kubectl
        image: {{ include "global.images.image" (dict "imageRoot" .Values.preUpgradeHook.image "global" .Values.global) }}
        imagePullPolicy: {{ .Values.preUpgradeHook.image.pullPolicy }}
        {{- if .Values.preUpgradeHook.resources }}
        resources: {{- toYaml .Values.preUpgradeHook.resources | nindent 10 }}
        {{- end }}
        command:
        - /bin/bash
        - -c
        - >
            export current_mongodb_version=$(kubectl get deployment {{ .Release.Name }}-mongodb -o=jsonpath='{$.spec.template.metadata.labels}' -n {{ .Release.Namespace }} | awk -F'helm.sh/chart' '{print $2}' | awk -F'[^0-9]+' '{ print $2 }');
            if [ "$current_mongodb_version" -eq "12" ];
              then kubectl scale deployment {{ .Release.Name }}-mongodb --replicas=0 -n {{ .Release.Namespace }};
              else echo "MongoDB is up-to-date";
            fi
        securityContext:
          {{- toYaml .Values.preUpgradeHook.securityContext | nindent 10 }}
      securityContext:
        {{- toYaml .Values.preUpgradeHook.podSecurityContext | nindent 8 }}
      restartPolicy: Never
      {{- if .Values.preUpgradeHook.tolerations }}
      tolerations: {{ toYaml .Values.preUpgradeHook.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.preUpgradeHook.nodeSelector }}
      nodeSelector: {{ toYaml .Values.preUpgradeHook.nodeSelector | nindent 8 }}
      {{- end }}
  {{- end }}
