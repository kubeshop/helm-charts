apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Values.preUpgradeHook.name }}"
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      name: "{{ .Values.preUpgradeHook.name }}"
      labels:
        app.kubernetes.io/component: mongodb
        app.kubernetes.io/name: "{{ .Values.preUpgradeHook.name }}"
    spec:
      serviceAccountName: "{{ .Values.preUpgradeHook.name }}"
      containers:
      - name: kubectl
        image: "k8s.gcr.io/hyperkube:v1.12.1"
        imagePullPolicy: "IfNotPresent"
        command:
        - /bin/bash
        - -c
        - >
            export current_mongodb_version=$(kubectl get deployment testkube-mongodb -o=jsonpath='{$.spec.template.metadata.labels}' -n testkube | awk -F'helm.sh/chart' '{print $2}' | awk -F'[^0-9]+' '{ print $2 }');
            if [ "$current_mongodb_version" -lt "13" ];
            then kubectl scale deployment testkube-mongodb --replicas=0 -n testkube;
            sleep 2;
            kubectl delete pvc testkube-mongodb -n testkube || echo "MongoDB volume not found. Continuing with creating a new one";
            else echo "MongoDB is up-to-date"; fi
      restartPolicy: OnFailure
