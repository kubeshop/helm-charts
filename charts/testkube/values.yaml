# Default values for testkube.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

### Global image parameters
## global.imageRegistry Global Docker image registry
## global.imagePullSecrets [array] Global Docker registry secret names as an array
## global.labels Labels to add to all deployed objects
## global.annotations Annotations to add to all deployed objects
global:
  imageRegistry: ""
  imagePullSecrets: []
  labels: {}
  annotations: {}

### MongoDB parameters
## For more configuration parameters of MongoDB chart please look here: https://github.com/bitnami/charts/tree/master/bitnami/mongodb#parameters
mongodb:
  enabled: true
  nameOverride: "mongodb"
  fullnameOverride: "testkube-mongodb"
  architecture: "standalone"
  auth:
    enabled: false
    # rootPassword: "123DefaultOne321"
  service:
    port: "27017"
    portName: "mongodb"
    nodePort: true
    clusterIP: ""
  resources:
    requests:
      cpu: 150m
      memory: 100Mi
  ## Image built with ZCube tool so that it can be run on ARM nodes: https://github.com/ZCube/bitnami-compat/tree/main/patches
  ## Currently Bitnami doesn't support ARM: https://github.com/bitnami/charts/issues/7305
  image:
    registry: docker.io
    repository: zcube/bitnami-compat-mongodb
    tag: 5.0.10-debian-11-r19
  ## Tolerations to schedule a workload to nodes with any architecture type. Required for deployment to GKE cluster.
  ## More info: https://cloud.google.com/kubernetes-engine/docs/how-to/prepare-arm-workloads-for-deployment#node-affinity-multi-arch-arm
  tolerations:
    - key: kubernetes.io/arch
      operator: Equal
      value: arm64
      effect: NoSchedule

  ## NATS chart parameter
  ## Tolerations to schedule a workload to nodes with any architecture type. Required for deployment to GKE cluster.
  ## More info: https://cloud.google.com/kubernetes-engine/docs/how-to/prepare-arm-workloads-for-deployment#node-affinity-multi-arch-arm
nats:
  tolerations:
    - key: kubernetes.io/arch
      operator: Equal
      value: arm64
      effect: NoSchedule
  natsbox:
    tolerations:
      - key: kubernetes.io/arch
        operator: Equal
        value: arm64
        effect: NoSchedule

### Testkube API parameters
testkube-api:
  rbac:
    createRoles: true
    createRoleBindings: true

  ## Monitoring parameters
  prometheus:
    ## Use monitoring
    enabled: false
    ## The name of the label to use in serviceMonitor if Prometheus is enabled
    monitoringLabels: {}
    ## Scrape interval
    interval: 15s

  ## nameOverride Overrides Chart name
  ## fullnameOverride Full name that overrides Chart name
  nameOverride: "api-server"
  fullnameOverride: "testkube-api-server"

  ### Global image parameters
  ## Global Docker image registry
  ## Global Docker registry secret names as an array
  image:
    registry: docker.io
    repository: kubeshop/testkube-api-server
    pullPolicy: Always
    ## Overrides the image tag whose default is the chart appVersion.
    # tag: "latest"
  ## Extra environment variables to be set on deployment
  ## For example:
  extraEnvVars: []
  #  - name: FOO
  #    value: BAR

  ## Running Testkube in Agent mode
  cloud:
    ## URL of the Cloud Saas Control Plane
    url: "agent.testkube.io:443"
    ## License Key
    key: ""

  ## Tolerations to schedule a workload to nodes with any architecture type. Required for deployment to GKE cluster.
  ## More info: https://cloud.google.com/kubernetes-engine/docs/how-to/prepare-arm-workloads-for-deployment#node-affinity-multi-arch-arm
  tolerations:
    - key: kubernetes.io/arch
      operator: Equal
      value: arm64
      effect: NoSchedule

  ## Service parameters
  service:
    ## Adapter service type
    type: ClusterIP # for working with real k8s we should use "ClusterIP" type.
    ## HTTP Port
    port: 8088
    ## Service Annotations
    annotations: {}
    ## Service labels
    labels: {}

  ## NATS parameters
  ## ref: https://github.com/nats-io/nats-server
  nats:
    ## Use NATS
    enabled: true

  ## MINIO parameters
  minio:
    ## Use minio
    enabled: true
    ## Minio extra vars
    extraEnvVars: {}
    # - name: FOO
    #   value: BAR
    ## PVC Access Modes for Minio. The volume is mounted as read-write by a single node.
    ## Read more about access modes here: http://kubernetes.io/docs/user-guide/persistent-volumes/#access-modes
    accessModes:
      - ReadWriteOnce
    ## Node labels for pod assignment.
    nodeSelector: {}
    ## Tolerations to schedule a workload to nodes with any architecture type. Required for deployment to GKE cluster.
    ## More info: https://cloud.google.com/kubernetes-engine/docs/how-to/prepare-arm-workloads-for-deployment#node-affinity-multi-arch-arm
    tolerations:
      - key: kubernetes.io/arch
        operator: Equal
        value: arm64
        effect: NoSchedule
    ## Affinity for pod assignment.
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
    affinity: {}
    ## Minio image from DockerHub
    image:
      registry: docker.io
      repository: minio/minio
      tag: latest
    ## ServiceAccount name to use for Minio
    serviceAccountName: ""
    ## Root username
    ## Root password
    minioRootUser: "minio"
    minioRootPassword: "minio123"
    ## PVC Storage Request for MinIO. Should be available in the cluster.
    storage: 10Gi
    ## Resources limits and requests
    resources: {}
    ## Wait 60 seconds before performing the first probe
    initialDelaySeconds: 60

  ## uiIngress parameters
  uiIngress:
    ## Use Ingress
    enabled: false
    ## @param ingress.annotations [object] Additional annotations for the Ingress resource.
    ## e.g annotations for NGINX Ingress Controller:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   nginx.ingress.kubernetes.io/rewrite-target: /$1
    ##   nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/enable-cors: "true"
    ##   nginx.ingress.kubernetes.io/cors-allow-methods: "GET"
    ##   nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
    ## github oauth annotations (empty by default)
    ##   nginx.ingress.kubernetes.io/auth-url: "http://$host/oauth2/auth"
    ##   nginx.ingress.kubernetes.io/auth-signin: "http://$host/oauth2/start?rd=$escaped_request_uri"
    ##   nginx.ingress.kubernetes.io/auth-url: ""
    ##   nginx.ingress.kubernetes.io/auth-signin: ""
    ## for websockets
    ##  nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    ##  nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    path: /results/(v\d/executions.*)
    ## Hostnames must be provided if Ingress is enabled.
    hosts:
      - testkube.example.com
    tlsenabled: false
    ## Placing a host in the TLS config will indicate a certificate should be created
    tls:
      []
      # - hosts:
      #     - testkube.example.com
    #   secretName: testkube-cert-secret

  ## cliIngress parameters
  cliIngress:
    ## Use ingress
    enabled: false
    ## @param ingress.annotations [object] Additional annotations for the Ingress resource.
    ## e.g annotations for NGINX Ingress Controller:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   nginx.ingress.kubernetes.io/rewrite-target: /$1
    ##   nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/configuration-snippet: |
    ##     more_set_headers "X-CLI-Ingress: true";
    ## for websockets
    ##   nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    ##   nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"

    ## parameters to check oauth token (by default github one)
    oauth:
      clientID: ""
      clientSecret: ""
      provider: "github"
      scopes: ""
    path: /results/(v\d/.*)
    ## Hostnames must be provided if Ingress is enabled.
    hosts:
      - testkube.example.com
    tlsenabled: false
    # Placing a host in the TLS config will indicate a certificate should be created
    tls:
      []
      # - hosts:
      #     - testkube.example.com
    #   secretName: testkube-cert-secret

  ## Storage for Testkube API. Now Minio is used:
  storage:
    endpoint: ""
    endpoint_port: "9000"
    accessKeyId: "minio"
    accessKey: "minio123"
    location: ""
    token: ""
    SSL: false
    scrapperEnabled: true
  
  ## Logs storage for Testkube API.
  logs:
    ## where the logs should be stored there are 2 possible valuse : minio|mongo
    storage: "minio"
    ## if storage is set to minio then the bucket must be specified, if minio with s3 is used make sure to use a unique name
    bucket: "testkube-logs"

  ## Testkube API resource requests and limits
  resources:
    requests:
      cpu: 200m
      memory: 200Mi

  ##MongoDB parametes
  mongodb:
    dsn: "mongodb://testkube-mongodb:27017"
    # secretName: testkube-secrets
    # secretKey: mongo-dsn
    allowDiskUse: true

  ## Enable analytics for Testkube
  analyticsEnabled: true

  ## Integration with Slack.
  ##ref: https://kubeshop.github.io/testkube/integrations/slack-integration/
  ## Slack token from the testkube authentication endpoint
  slackToken: ""
  ## Slack template for the events sent to Slack
  slackTemplate: ""
  ## Slack config for the events, tests, testsuites and channels
  slackConfig: ""
  executors: ""
  ## SA that is used by a job. Can be annotated with the IAM Role Arn to access S3 service in AWS Cloud.
  jobServiceAccountName: ""

  ##Test Connection pod
  testConnection:
    enabled: true
    resources: {}
    ## Tolerations to schedule a workload to nodes with any architecture type. Required for deployment to GKE cluster.
    ## More info: https://cloud.google.com/kubernetes-engine/docs/how-to/prepare-arm-workloads-for-deployment#node-affinity-multi-arch-arm
    tolerations:
      - key: kubernetes.io/arch
        operator: Equal
        value: arm64
        effect: NoSchedule

##Testkube Dashboard parameters
testkube-dashboard:
  ##deploy dashboard
  enabled: true
  ##Overrides Chart name
  nameOverride: "dashboard"
  ##Full name that overrides Chart name
  fullnameOverride: "testkube-dashboard"
  ##Dashboard image
  ## image.registry Dashboard image registry. Can be overridden by global parameters
  ## image.repository Dashboard image name
  ## image.tag Dashboard image tag
  ## image.pullPolicy Dashboard Image pull policy
  image:
    registry: docker.io
    repository: kubeshop/testkube-dashboard
    pullPolicy: Always
    # tag: "main" # it will take tag from appVersion.

  ## Testkube Dashboard Pod annotations
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}

  ## Extra labels for Testkube Dashboard pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  ## Number of Testkube Dashboard Pod replicas
  replicaCount: 1

  ## Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  podSecurityContext: {}
  # fsGroup: 2000

  ##Service parameters
  service:
    ## Adapter service type
    type: ClusterIP
    ##Dashboard port
    port: 8080
    ## Additional custom annotations for the service
    annotations: {}

  ## Extra environment variables to be set on deployment
  ## For example:
  extraEnvVars: []
  #  - name: FOO
  #    value: BAR

  ##Ingress parameters
  ingress:
    ##Use ingress
    enabled: false
    ## Specific Ingress labels
    labels: {}
    ## Specific Ingress annotations
    annotations: {}
    ## Additional annotations for the Ingress resource.
    ## e.g annotations for NGINX Ingress Controller:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/enable-cors: "true"
    ##   nginx.ingress.kubernetes.io/cors-allow-methods: "GET"
    ##   nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
    ## github oauth annotations (empty by default)
    ##   nginx.ingress.kubernetes.io/auth-url: "http://$host/oauth2/auth"
    ##   nginx.ingress.kubernetes.io/auth-signin: "http://$host/oauth2/start?rd=$escaped_request_uri"
    ##   nginx.ingress.kubernetes.io/access-control-allow-origin: "*"
    ##   nginx.ingress.kubernetes.io/auth-url: ""
    ##   nginx.ingress.kubernetes.io/auth-signin: ""
    ##   nginx.ingress.kubernetes.io/access-control-allow-origin: ""
    ##
    ##Path to controller
    path: /
    ## Hostnames must be provided if Ingress is enabled.
    hosts:
      []
      # - testkube.example.com
    tlsenabled: false
    ## Placing a host in the TLS config will indicate a certificate should be created
    tls:
      []
      # - hosts:
      #     - testkube.example.com
      #   secretName: testkube-cert-secret
  ##Testkube API Server endpoint
  apiServerEndpoint: "" # get the address of the endpoint or set it using helm

  ##Oauth parameters
  oauth2:
    ## Use oauth
    enabled: false
    ## Oauth Deployment name
    name: oauth2-proxy
    ## Ingress path
    path: /oauth2
    ## Oauth container port
    port: 4180
    ## Oauth2 specific labels
    labels: {}
    ## Oauth2 specific annotations
    annotations: {}
    ## Oauth2 Service annotations
    serviceAnnotations: {}
    ## Add additional service labels
    serviceLabels: {}
    ## Oauth2 Service type
    serviceType: ClusterIP
    ## Add additional labels to the pod (evaluated as a template)
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    podLabels: {}
    ## Array of args for oauth2 provider or github as default
    args:
      []
      #- --provider=github
      #- --email-domain=*
      #- --upstream=file:///dev/null
      #- --show-debug-on-error=true
    ## Array with extra environment variables to add to Locator nodes
    extraEnvVars: []
    ## Oauth2 pod annotations
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    podAnnotations: {}
    ## image.registry Oauth image registry. Can be overridden by global parameters
    ## image.repository Oauth image name
    ## image.tag Oauth image tag
    ## image.pullPolicy OauthI Image pull policy
    image:
      registry: quay.io
      repository: oauth2-proxy/oauth2-proxy
      tag: latest
      pullPolicy: Always
    ## Pod environment variables for Teskube UI authentication
    ## Reference: https://kubeshop.github.io/testkube/authentication/oauth-ui/
    ##
    ## clientId Client ID from Github OAuth application
    ## clientSecret Client Secret from Github OAuth application
    ## githubOrg Github organization - if you need to provide access only to members of your organization
    ## cookieSecret cookie secret generated using OpenSSL
    ## cookieSecure false - for http connection, true - for https connections
    ## redirectUrl "http://demo.testkube.io/oauth2/callback"
    env:
      clientId: ""
      clientSecret: ""
      githubOrg: ""
      cookieSecret: ""
      cookieSecure: "false"
      redirectUrl: "http://testkube.example.com/oauth2/callback"

    ## Add additional Ingress labels
    ingress:
      labels: {}

  ## Autoscaling parameters
  ## Enable autoscaling for Testkube dashboard deployment
  ## Minimum number of replicas to scale back
  ## Maximum number of replicas to scale out
  ## Target CPU utilization percentage
  ## Target Memory utilization percentage
  ## Specific autoscaling labels
  ## Specific autoscaling annotations
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetCPU: 80
    # targetMemoryUtilizationPercentage: 80
    labels: {}
    annotations: {}

  ## Node labels for pod assignment.
  nodeSelector: {}

  ## Tolerations to schedule a workload to nodes with any architecture type. Required for deployment to GKE cluster.
  ## More info: https://cloud.google.com/kubernetes-engine/docs/how-to/prepare-arm-workloads-for-deployment#node-affinity-multi-arch-arm
  tolerations:
    - key: kubernetes.io/arch
      operator: Equal
      value: arm64
      effect: NoSchedule

  ## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
  affinity: {}

  ## Service Account parameters
  serviceAccount:
    ## Specifies whether a service account should be created
    create: true
    ## Annotations to add to the service account
    ## Annotations to add to the service account
    annotations: {}
    ## The name of the service account to use.
    ## If not set and create is true, a name is generated using the fullname template
    name: ""

  ## Testkube Dashboard resource requests and limits
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources: {}

  ##Test Connection pod
  testConnection:
    enabled: true
    resources: {}
    ## Tolerations to schedule a workload to nodes with any architecture type. Required for deployment to GKE cluster.
    ## More info: https://cloud.google.com/kubernetes-engine/docs/how-to/prepare-arm-workloads-for-deployment#node-affinity-multi-arch-arm
    tolerations:
      - key: kubernetes.io/arch
        operator: Equal
        value: arm64
        effect: NoSchedule

##Testkube Operator parameters
testkube-operator:
  # should roles and roles bindings be created
  rbac:
    createRoles: true
    createRoleBindings: true

  # should the CRDs be installed
  installCRD: true

  ## Number of Testkube Operator Pod replicas
  replicaCount: 1

  ## Chart parameters
  ## nameOverride Overrides Chart name
  ## fullnameOverride Full name that overrides Chart name
  nameOverride: "testkube-operator"
  fullnameOverride: "testkube-operator"

  ##Proxy Image parameters
  ## image.registry Proxy image registry
  ## image.repository Proxy image name
  ## image.tag Proxy image tag
  ## image.pullPolicy Proxy Image pull policy
  proxy:
    image:
      registry: gcr.io
      repository: kubebuilder/kube-rbac-proxy
      tag: "v0.8.0"
    ## Proxy Container Port
    containerPort: 8443
    ## Resources limits and requests for kube-rbac-proxy container
    resources: {}

  ##Testkube API full name
  apiFullname: "testkube-api-server"
  ##Testkube Operator port
  apiPort: 8088

  ## Service Account parameters
  serviceAccount:
    ## Specifies whether a service account should be created
    create: true
    ## Annotations to add to the service account
    annotations: {}
    ## The name of the service account to use.
    ## If not set and create is true, a name is generated using the fullname template
    name: ""

  ## Extra environment variables to be set on deployment
  ## For example:
  extraEnvVars: []
  #  - name: FOO
  #    value: BAR
  ## Wait 15 seconds before performing the first probe
  initialDelaySeconds: 15
  ## Specifies that the kubelet should perform a liveness probe every 20 seconds.
  periodSeconds: 20
  ## Perform a liveness probe on specified port
  livenessProbePort: 8081
  ## Manager container port
  containerPort: 9443
  ## Perform a readiness probe on specified port
  readinessProbePort: 8081
  ## Wait 5 seconds before performing readiness probe
  readinessProbeinitialDelaySeconds: 5
  ## Specifies that the kubelet should perform a readiness probe every 10 seconds.
  readinessProbeperiodSeconds: 10

  ## Configure Security Context for Manager Container
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ##
  containerSecurityContext:
    allowPrivilegeEscalation: false
  ## Name of the metrics server. If not specified, default name from the template is used
  metricsServiceName: ""
  ## Terminating a container that failed its liveness or startup probe after 10s
  terminationGracePeriodSeconds: 10
  ## Testkube Operator Pod security Context
  securityContext:
    runAsNonRoot: true
  ## Testkube Operator Pod Volume
  volumes:
    secret:
      defaultMode: 420

  ## Webhook parameters
  webhook:
    ## Use webhook
    enabled: true
    ## Name of the webhook
    name: testkube-operator-webhook-admission
    ## Webhook specific labels
    labels: {}
    ## Webhook specific annotations
    annotations: {}
    ##Migrate Job parameters
    migrate:
      ## Deploy Migrate Job
      enabled: true
      ## image.registry Migrate container job image registry
      ## image.repository Migrate container job image name
      ## image.tag Migrate container job image tag
      ## image.pullPolicy Migrate container job image pull policy
      image:
        registry: docker.io
        repository: rancher/kubectl
        version: v1.23.7
        pullPolicy: Always
      ## Configure Security Context for Migrate Container
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
      ##
      securityContext:
        allowPrivilegeEscalation: false
      ## Number of retries before considering a Job as failed
      backoffLimit: 1
      ## Resources limits and requests
      resources: {}

    ##Patch Job parameters
    patch:
      enabled: true
      ## image.registry patch container job image registry
      ## image.repository patch container image name
      ## image.tag pathc container image tag
      ## image.pullPolicy patch container image pull policy
      image:
        registry: docker.io
        repository: dpejcev/kube-webhook-certgen
        version: 1.0.6
        pullPolicy: ""
      ## Annotations to add to the patch Job
      annotations: {}
      ## Pod annotations to add to the patch Job
      podAnnotations: {}
      ## Pod specific labels
      labels: {}
      ## Configure Security Context for Migrate Container
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
      ##
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        fsGroup: 2000
      ## Name of teh SA to use by patch Job
      serviceAccount:
        ## SA specific annotations
        annotations: {}
        ## SA name
        name: testkube-operator-webhook-cert-mgr
      ##Node labels for pod assignment
      ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
      ##
      nodeSelector:
        kubernetes.io/os: linux
      ## Tolerations to schedule a workload to nodes with any architecture type. Required for deployment to GKE cluster.
      ## More info: https://cloud.google.com/kubernetes-engine/docs/how-to/prepare-arm-workloads-for-deployment#node-affinity-multi-arch-arm
      tolerations:
        - key: kubernetes.io/arch
          operator: Equal
          value: arm64
          effect: NoSchedule

    ## Webhook certificate
    certificate:
      ## Webhook certificate secret name
      secretName: webhook-server-cert

    ## Create job resources
    createSecretJob:
      resources: {}

    ## Patch Webhook resource requests and limits
    patchWebhookJob:
      resources: {}
  ## Create RBAC roles for users and controller
  rbac:
    create: true

  ## Service Parameters
  service:
    ## Adapter service type
    type: ClusterIP
    ## HTTP Port
    port: 80

  ## Testkube Operator resource requests and limits
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.

  ## Node labels for Testkube Operator pod assignment.
  nodeSelector: {}

  ## Tolerations to schedule a workload to nodes with any architecture type. Required for deployment to GKE cluster.
  ## More info: https://cloud.google.com/kubernetes-engine/docs/how-to/prepare-arm-workloads-for-deployment#node-affinity-multi-arch-arm
  tolerations:
    - key: kubernetes.io/arch
      operator: Equal
      value: arm64
      effect: NoSchedule

  ## Affinity for Testkube Operator pod assignment.
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
  affinity: {}

  ##Test Connection pod
  testConnection:
    enabled: true
    resources: {}
    ## Tolerations to schedule a workload to nodes with any architecture type. Required for deployment to GKE cluster.
    ## More info: https://cloud.google.com/kubernetes-engine/docs/how-to/prepare-arm-workloads-for-deployment#node-affinity-multi-arch-arm
    tolerations:
      - key: kubernetes.io/arch
        operator: Equal
        value: arm64
        effect: NoSchedule

##MongoDB pre-upgrade parameters
preUpgradeHook:
  ## Upgrade hook is enabled
  enabled: true
  ## Upgrade hook name
  name: mongodb-upgrade
  ## Specify resource limits and requests
  resources: {}
  ## Create SA for upgrdae hook
  serviceAccount:
    create: true
  ## Tolerations to schedule a workload to nodes with any architecture type. Required for deployment to GKE cluster.
  ## More info: https://cloud.google.com/kubernetes-engine/docs/how-to/prepare-arm-workloads-for-deployment#node-affinity-multi-arch-arm
  tolerations:
    - key: kubernetes.io/arch
      operator: Equal
      value: arm64
      effect: NoSchedule
