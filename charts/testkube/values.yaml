# Default values for testkube.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#Global image parameters
## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets [array] Global Docker registry secret names as an array
## @param global.labels Labels to add to all deployed objects
## @param global.annotations Annotations to add to all deployed objects
global:
  imageRegistry: ""
  imagePullSecrets: []
  labels: {}
  annotations: {}

nameOverride: "testkube"
fullnameOverride: "testkube"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# For more configuration parameters of MongoDB chart please look here:
# https://github.com/bitnami/charts/tree/master/bitnami/mongodb#parameters
mongodb:
  enabled: true
  nameOverride: "mongodb"
  fullnameOverride: "testkube-mongodb"
  architecture: "standalone"
  auth:
    enabled: false
    # rootPassword: "123DefaultOne321"
  service:
    port: "27017"
    portName: "mongodb"
    nodePort: true
    clusterIP: ""
  resources:
    requests:
      cpu: 150m
      memory: 100Mi

testkube-api:
  prometheus:
    enabled: false
    ## @param testkube-api.monitoringLabels The name of the label to use in serviceMonitor if Prometheus is enabled
    ## For example:
    monitoringLabels: []
    ## Scrape interval
    interval: 15s
  nameOverride: "api-server"
  fullnameOverride: "testkube-api-server"
  image:
    registry: docker.io
    repository: kubeshop/testkube-api-server
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    # TODO we should stick to static version
    # tag: "latest"
  ## @param extraEnvVars Extra environment variables to be set on deployment
  ## For example:
  extraEnvVars: []
  #  - name: FOO
  #    value: BAR
  service:
    type: ClusterIP # for working with real k8s we should use "ClusterIP" type.
    port: 8088
    annotations: {}
  nats:
    enabled: true
  minio:
    enabled: true
    extraEnvVars: []
    # - name: FOO
    #   value: BAR
    nodeSelector: {}
    tolerations: []
    affinity: {}
    image:
      registry: docker.io
      repository: minio/minio
      tag: latest
    serviceAccountName: ""
    minioRootUser: "minio"
    minioRootPassword: "minio123"
    storage: 10Gi
  uiIngress:
    enabled: false
    ## @param ingress.annotations [object] Additional annotations for the Ingress resource.
    ## e.g annotations for NGINX Ingress Controller:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   nginx.ingress.kubernetes.io/rewrite-target: /$1
    ##   nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/enable-cors: "true"
    ##   nginx.ingress.kubernetes.io/cors-allow-methods: "GET"
    ##   nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
    ## github oauth annotations (empty by default)
    ##   nginx.ingress.kubernetes.io/auth-url: "http://$host/oauth2/auth"
    ##   nginx.ingress.kubernetes.io/auth-signin: "http://$host/oauth2/start?rd=$escaped_request_uri"
    ##   nginx.ingress.kubernetes.io/auth-url: ""
    ##   nginx.ingress.kubernetes.io/auth-signin: ""
    ## for websockets
    ##  nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    ##  nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    path: /results/(v\d/executions.*)
    ## Hostnames must be provided if Ingress is enabled.
    hosts:
      []
    # - testkube.example.com
    tlsenabled: false
    # Placing a host in the TLS config will indicate a certificate should be created
    tls:
      []
      # - hosts:
      #     - testkube.example.com
    #   secretName: testkube-cert-secret
  cliIngress:
    enabled: false
    ## @param ingress.annotations [object] Additional annotations for the Ingress resource.
    ## e.g annotations for NGINX Ingress Controller:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   nginx.ingress.kubernetes.io/rewrite-target: /$1
    ##   nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/configuration-snippet: |
    ##     more_set_headers "X-CLI-Ingress: true";
    ## for websockets
    ##   nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    ##   nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"

    # parameters to check oauth token (by default github one)
    oauth:
      clientID: ""
      clientSecret: ""
      provider: "github"
      scopes: ""
    path: /results/(v\d/.*)
    ## Hostnames must be provided if Ingress is enabled.
    hosts:
      []
    # - testkube.example.com
    tlsenabled: false
    # Placing a host in the TLS config will indicate a certificate should be created
    tls:
      []
      # - hosts:
      #     - testkube.example.com
    #   secretName: testkube-cert-secret
  storage:
    endpoint: ""
    endpoint_port: "9000"
    accessKeyId: "minio"
    accessKey: "minio123"
    location: ""
    token: ""
    SSL: false
    scrapperEnabled: true
  resources:
    requests:
      cpu: 200m
      memory: 200Mi

  mongodb:
    dsn: "mongodb://testkube-mongodb:27017"
    # secretName: testkube-secrets
    # secretKey: mongo-dsn

  analyticsEnabled: true
  slackToken: ""
  executors: ""
  jobServiceAccountName: ""

##Testkube Dashboard parameters
testkube-dashboard:
  ##deploy dashboard
  enabled: true

  ##Overrides Chart name
  nameOverride: "dashboard"

  ##Full name that overrides Chart name
  fullnameOverride: "testkube-dashboard"

  ##Dashboard image
  ## image.registry Dashboard image registry. Can be overridden by global parameters
  ## image.repository Dashboard image name
  ## image.tag Dashboard image tag
  ## image.pullPolicy Dashboard Image pull policy
  image:
    registry: docker.io
    repository: kubeshop/testkube-dashboard
    pullPolicy: Always
    # tag: "main" # it will take tag from appVersion.

  ## Testkube Dashboard Pod annotations
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}

  ## Extra labels for Testkube Dashboard pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  ## Number of Testkube Dashboard Pod replicas
  replicaCount: 1

  ## Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  podSecurityContext: {}
  # fsGroup: 2000

  ##Service parameters
  service:
    ## Adapter service type
    type: ClusterIP
    ##Dashboard port
    port: 8080
    ## Additional custom annotations for the service
    annotations: {}

  ## Extra environment variables to be set on deployment
  ## For example:
  extraEnvVars: []
  #  - name: FOO
  #    value: BAR

  ##Ingress parameters
  ingress:
    ##Use ingress
    enabled: false
    ## Specific Ingress labels
    labels: {}
    ## Specific Ingress annotations
    annotations: {}
    ## Additional annotations for the Ingress resource.
    ## e.g annotations for NGINX Ingress Controller:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/enable-cors: "true"
    ##   nginx.ingress.kubernetes.io/cors-allow-methods: "GET"
    ##   nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
    ## github oauth annotations (empty by default)
    ##   nginx.ingress.kubernetes.io/auth-url: "http://$host/oauth2/auth"
    ##   nginx.ingress.kubernetes.io/auth-signin: "http://$host/oauth2/start?rd=$escaped_request_uri"
    ##   nginx.ingress.kubernetes.io/access-control-allow-origin: "*"
    ##   nginx.ingress.kubernetes.io/auth-url: ""
    ##   nginx.ingress.kubernetes.io/auth-signin: ""
    ##   nginx.ingress.kubernetes.io/access-control-allow-origin: ""
    ##
    ##Path to controller
    path: /
    ## Hostnames must be provided if Ingress is enabled.
    hosts: []
     # - testkube.example.com
    tlsenabled: false
    ## Placing a host in the TLS config will indicate a certificate should be created
    tls: []
      # - hosts:
      #     - testkube.example.com
      #   secretName: testkube-cert-secret
    ##Testkube API Server endpoint
    apiServerEndpoint: "" # get the address of the endpoint or set it using helm

  ##Oauth parameters
  oauth2:
    ## Use oauth
    enabled: false
    ## Oauth Deployment name
    name: oauth2-proxy
    ## Ingress path
    path: /oauth2
    ## Oauth container port
    port: 4180
    ## Oauth2 specific labels
    labels: {}
    ## Oauth2 specific annotations
    annotations: {}
    ## Oauth2 Service annotations
    serviceAnnotations: {}
    ## Add additional labels to the pod (evaluated as a template)
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    podLabels: {}
    ## Array with extra environment variables to add to Locator nodes
    extraEnvVars: []
    ## Oauth2 pod annotations
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    podAnnotations: {}
    ## image.registry Oauth image registry. Can be overridden by global parameters
    ## image.repository Oauth image name
    ## image.tag Oauth image tag
    ## image.pullPolicy OauthI Image pull policy
    image:
      registry: quay.io
      repository: oauth2-proxy/oauth2-proxy
      tag: latest
      pullPolicy: Always
    ## Pod environment variables for Teskube UI authentication
    ## Reference: https://kubeshop.github.io/testkube/authentication/oauth-ui/
    ##
    ## clientId Client ID from Github OAuth application
    ## clientSecret Client Secret from Github OAuth application
    ## githubOrg Github organization - if you need to provide access only to members of your organization
    ## cookieSecret cookie secret generated using OpenSSL
    ## cookieSecure false - for http connection, true - for https connections
    ## redirectUrl "http://demo.testkube.io/oauth2/callback"
    env:
      clientId: ""
      clientSecret: ""
      githubOrg: ""
      cookieSecret: ""
      cookieSecure: "false"
      redirectUrl: "http://testkube.example.com/oauth2/callback"

    ## Add additional Ingress labels
    ingress:
      labels: {}

  ## Autoscaling parameters
  ## Enable autoscaling for Testkube dashboard deployment
  ## Minimum number of replicas to scale back
  ## Maximum number of replicas to scale out
  ## Target CPU utilization percentage
  ## Target Memory utilization percentage
  ## Specific autoscaling labels
  ## Specific autoscaling annotations
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetCPU: 80
  # targetMemoryUtilizationPercentage: 80
    labels: {}
    annotations: {}

  ## Node labels for pod assignment.
  nodeSelector: {}

  ## Tolerations for pod assignment.
  tolerations: []

  ## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
  affinity: {}

  ## Service Account parameters
  serviceAccount:
    ## Specifies whether a service account should be created
    create: true
    ## Annotations to add to the service account
    ## Annotations to add to the service account
    annotations: {}
    ## The name of the service account to use.
    ## If not set and create is true, a name is generated using the fullname template
    name: ""

  ## Testkube Dashboard resource requests and limits
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources: {}
#    limits:
#      cpu: 100m
#      memory: 128Mi
#    requests:
#      cpu: 100m
#      memory: 128Mi

testkube-operator:
  imageProxy: "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0"
  ## @param extraEnvVars Extra environment variables to be set on deployment
  ## For example:
  extraEnvVars: []
#    - name: FOO
#      value: BAR

preUpgradeHook:
  name: mongodb-upgrade
  serviceAccount:
    create: true
