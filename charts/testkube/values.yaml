# Default values for testkube.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#Global image parameters
## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets [array] Global Docker registry secret names as an array
global:
  imageRegistry: ""
  imagePullSecrets: []

nameOverride: "testkube"
fullnameOverride: "testkube"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# For more configuration parameters of MongoDB chart please look here:
# https://github.com/bitnami/charts/tree/master/bitnami/mongodb#parameters
mongodb:
  enabled: true
  nameOverride: "mongodb"
  fullnameOverride: "testkube-mongodb"
  architecture: "standalone"
  auth:
    enabled: false
    # rootPassword: "123DefaultOne321"
  service:
    port: "27017"
    portName: "mongodb"
    nodePort: true
    clusterIP: ""
  resources:
    requests:
      cpu: 150m
      memory: 100Mi

testkube-api:
  prometheus:
    enabled: false
  ## @param testkube-api.monitoringLabels The name of the label to use in serviceMonitor if Prometheus is enabled
  ## For example:
    monitoringLabels: []
  ## Scrape interval
    interval: 15s
#    release: myrelease
  nameOverride: "api-server"
  fullnameOverride: "testkube-api-server"
  image:
    registry: docker.io
    repository: kubeshop/testkube-api-server
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    # TODO we should stick to static version
    # tag: "latest"
  ## @param extraEnvVars Extra environment variables to be set on deployment
  ## For example:
  extraEnvVars: []
#    - name: FOO
#      value: BAR
  service:
    type: ClusterIP # for working with real k8s we should use "ClusterIP" type.
    port: 8088
    annotations: {}
  nats:
    enabled: true
  minio:
    enabled: true
    nodeSelector: {}
    tolerations: []
    affinity: {}
    image: minio/minio:latest
    serviceAccountName: ""
    minioRootUser: "minio"
    minioRootPassword: "minio123"
    storage: 10Gi
  uiIngress:
    enabled: false
    ## @param ingress.annotations [object] Additional annotations for the Ingress resource.
    ## e.g annotations for NGINX Ingress Controller:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   nginx.ingress.kubernetes.io/rewrite-target: /$1
    ##   nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/enable-cors: "true"
    ##   nginx.ingress.kubernetes.io/cors-allow-methods: "GET"
    ##   nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
    ## github oauth annotations (empty by default)
    ##   nginx.ingress.kubernetes.io/auth-url: "http://$host/oauth2/auth"
    ##   nginx.ingress.kubernetes.io/auth-signin: "http://$host/oauth2/start?rd=$escaped_request_uri"
    ##   nginx.ingress.kubernetes.io/auth-url: ""
    ##   nginx.ingress.kubernetes.io/auth-signin: ""
    ## for websockets
    ##  nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    ##  nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    path: /results/(v\d/executions.*)
    ## Hostnames must be provided if Ingress is enabled.
    hosts:
      []
    # - testkube.example.com
    tlsenabled: false
    # Placing a host in the TLS config will indicate a certificate should be created
    tls:
      []
      # - hosts:
      #     - testkube.example.com
      #   secretName: testkube-cert-secret
  cliIngress:
    enabled: false
    ## @param ingress.annotations [object] Additional annotations for the Ingress resource.
    ## e.g annotations for NGINX Ingress Controller:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   nginx.ingress.kubernetes.io/rewrite-target: /$1
    ##   nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/configuration-snippet: |
    ##     more_set_headers "X-CLI-Ingress: true";
    ## for websockets
    ##   nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    ##   nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"

    # parameters to check oauth token (by default github one)
    oauth:
      clientID: ""
      clientSecret: ""
      provider: "github"
      scopes: ""
    path: /results/(v\d/.*)
    ## Hostnames must be provided if Ingress is enabled.
    hosts:
      []
    # - testkube.example.com
    tlsenabled: false
    # Placing a host in the TLS config will indicate a certificate should be created
    tls:
      []
      # - hosts:
      #     - testkube.example.com
      #   secretName: testkube-cert-secret
  storage:
    endpoint: ""
    endpoint_port: "9000"
    accessKeyId: "minio"
    accessKey: "minio123"
    location: ""
    token: ""
    SSL: false
    scrapperEnabled: true
  resources:
    requests:
      cpu: 200m
      memory: 100Mi

  mongodb:
    dsn: "mongodb://testkube-mongodb:27017"
    # secretName: testkube-secrets
    # secretKey: mongo-dsn

  analyticsEnabled: true
  slackToken: ""
  executors: ""
  jobServiceAccountName: ""

testkube-dashboard:
  enabled: true
  nameOverride: "dashboard"
  fullnameOverride: "testkube-dashboard"
  image:
    repository: kubeshop/testkube-dashboard
    pullPolicy: Always
    # tag: "main" # it will take tag from appVersion.
  service:
    type: ClusterIP
    port: 8080
    annotations: {}
  ## @param extraEnvVars Extra environment variables to be set on deployment
  ## For example:
  extraEnvVars: []
  ##  - name: FOO
  ##    value: BAR
  ingress:
    enabled: false
    ## @param ingress.annotations [object] Additional annotations for the Ingress resource.
    ## e.g annotations for NGINX Ingress Controller:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/ssl-redirect: "false"
    ##   nginx.ingress.kubernetes.io/enable-cors: "true"
    ##   nginx.ingress.kubernetes.io/cors-allow-methods: "GET"
    ##   nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
    ## github oauth annotations (empty by default)
    ##   nginx.ingress.kubernetes.io/auth-url: "http://$host/oauth2/auth"
    ##   nginx.ingress.kubernetes.io/auth-signin: "http://$host/oauth2/start?rd=$escaped_request_uri"
    ##   nginx.ingress.kubernetes.io/access-control-allow-origin: "*"
    ##   nginx.ingress.kubernetes.io/auth-url: ""
    ##   nginx.ingress.kubernetes.io/auth-signin: ""
    ##   nginx.ingress.kubernetes.io/access-control-allow-origin: ""
    path: /
    ## Hostnames must be provided if Ingress is enabled.
    hosts:
      []
    # - testkube.example.com
    tlsenabled: false
    # Placing a host in the TLS config will indicate a certificate should be created
    tls:
      []
      # - hosts:
      #     - testkube.example.com
      #   secretName: testkube-cert-secret
    apiServerEndpoint: "" # get the address of the endpoint or set it using helm
  oauth2:
    enabled: false
    name: oauth2-proxy
    path: /oauth2
    port: 4180
    selector: k8s-app
    image:
      repository: quay.io/oauth2-proxy/oauth2-proxy
      tag: latest
      pullPolicy: Always
    env:
      clientId: ""
      clientSecret: ""
      githubOrg: ""
      cookieSecret: ""
      cookieSecure: "false"
      redirectUrl: "http://testkube.example.com/oauth2/callback"

testkube-operator:
  imageProxy: "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0"
  ## @param extraEnvVars Extra environment variables to be set on deployment
  ## For example:
  extraEnvVars: []
#    - name: FOO
#      value: BAR

preUpgradeHook:
  name: mongodb-upgrade
  serviceAccount:
    create: true
