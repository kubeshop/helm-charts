apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "testkube-api.fullname" . }}
  labels:
    {{- include "testkube-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "testkube-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "testkube-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: testkube-api-server-{{ .Release.Name }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
          - name: APISERVER_PORT
            value: "{{ .Values.service.port }}"
          - name: NATS_URI
            {{- if .Values.nats.secretName }}
            valueFrom:
              secretKeyRef:
                name: {{ .Values.nats.secretName }}
                key: {{ .Values.nats.secretKey }}
            {{- else }}
            value: "{{ .Values.nats.uri }}"
            {{- end }}
          - name: API_MONGO_DSN
            {{- if .Values.mongodb.secretName }}
            valueFrom:
              secretKeyRef:
                name: {{ .Values.mongodb.secretName }}
                key: {{ .Values.mongodb.secretKey }}
            {{- else }}
            value: "{{ .Values.mongodb.dsn }}"
            {{- end }}
          - name: POSTMANEXECUTOR_URI
            value: "{{ .Values.postmanExecutorURI }}"
          - name: TESTKUBE_ANALYTICS_ENABLED
            value: "{{ .Values.analyticsEnabled }}"
          - name: SLACK_TOKEN
            value: "{{ .Values.slackToken }}"
          - name: "STORAGE_ENDPOINT"
            {{- if .Values.storage.endpoint }}
            value:  "{{ .Values.storage.endpoint }}"
            {{- else }}
            value:  "testkube-minio-service-{{ .Release.Namespace }}:{{ .Values.storage.endpoint_port }}"
            {{- end }}
          - name: "STORAGE_ACCESSKEYID"
            value:  "{{ .Values.storage.accessKeyId }}"
          - name: "STORAGE_SECRETACCESSKEY"
            value: "{{ .Values.storage.accessKey }}"
          - name: "STORAGE_LOCATION"
            value: "{{ .Values.storage.location }}"
          - name: "STORAGE_TOKEN"
            value: "{{ .Values.storage.token }}"
          - name: "STORAGE_SSL"
            value:  "{{ .Values.storage.SSL }}"
          - name: "SCRAPPERENABLED"
            value:  "{{ .Values.storage.scrapperEnabled }}"
          - name: TESTKUBE_DEFAULT_EXECUTORS
            value: "{{ .Files.Get "executors.json" | b64enc }}"
          - name: TESTKUBE_NAMESPACE
            value: "{{ .Release.Namespace }}"
          - name: TESTKUBE_TEMPLATE_JOB
            value: "{{ .Files.Get "job-template.yml" | b64enc }}"
          - name: APISERVER_FULLNAME
            value: "{{ include "testkube-api.fullname" . }}"
          - name: APISERVER_CONFIG
            value: "testkube-api-server-config-{{ .Release.Namespace }}"
          - name: TESTKUBE_OAUTH_CLIENTID
            value:  "{{ .Values.cliIngress.oauth.clientID }}"
          - name: TESTKUBE_OAUTH_CLIENTSECRET
            value:  "{{ .Values.cliIngress.oauth.clientSecret }}"
          - name: TESTKUBE_OAUTH_PROVIDER
            value:  "{{ .Values.cliIngress.oauth.provider }}"
          - name: TESTKUBE_OAUTH_SCOPES
            value:  "{{ .Values.cliIngress.oauth.scopes }}"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
