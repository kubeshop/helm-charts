apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Name }}"
  namespace: {{ .Namespace }}
  ownerReferences:
  - apiVersion: batch/v1
    kind: job
    name: {{ .JobName }}
    uid: {{ .JobUID }}
spec:
  {{- if gt .ActiveDeadlineSeconds 0 }}
  activeDeadlineSeconds: {{ .ActiveDeadlineSeconds }}
  {{- end }}
  initContainers:
  - name: init
    {{- if .Registry }}
    image: {{ .Registry }}/{{ .InitImage }}
    {{- else }}
    image: {{ .InitImage }}
    {{- end }}
    imagePullPolicy: IfNotPresent
    command: 
      - "/bin/runner"
      - '{{ .Jsn }}'
    volumeMounts:
    {{- if not (and  .ArtifactRequest (eq .ArtifactRequest.VolumeMountPath "/data")) }}
    - name: data-volume
      mountPath: /data
    {{ end }}
    {{- if .CertificateSecret }}
    - name: {{ .CertificateSecret }}
      mountPath: /etc/certs
    {{- end }}
    {{- if .ArtifactRequest }}
      {{- if and .ArtifactRequest.VolumeMountPath .ArtifactRequest.StorageClassName }}
    - name: artifact-volume
      mountPath: {{ .ArtifactRequest.VolumeMountPath }}
      {{- end }}
    {{- end }}
    {{- range $configmap := .EnvConfigMaps }}
    {{- if and $configmap.Mount $configmap.Reference }}
    - name: {{ $configmap.Reference.Name }}
      mountPath: {{ $configmap.MountPath }}
    {{- end }}
    {{- end }}
    {{- range $secret := .EnvSecrets }}
    {{- if and $secret.Mount $secret.Reference }}
    - name: {{ $secret.Reference.Name }}
      mountPath: {{ $secret.MountPath }}
    {{- end }}
    {{- end }}
  containers:
  {{ if .Features.LogsV2 -}}
  - name: "main-logs"
    {{- if .Registry }}
    image: {{ .Registry }}/{{ .LogSidecarImage }}
    {{- else }}
    image: {{ .LogSidecarImage }}
    {{- end }}
    imagePullPolicy: IfNotPresent
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: NAMESPACE
      value: {{ .Namespace }}
    - name: NATS_URI
      value: {{ .NatsUri }}
    - name: ID
      value: {{ .JobName }}
    - name: GROUP
      value: test-slave
    - name: SOURCE
      value: "job-slave-pod:{{ .Name }}"
  {{- end }}
  - name: main
    {{- if .Registry }}
    image: {{ .Registry }}/{{ .Image }}
    {{- else }}
    image: {{ .Image }}
    {{- end }}
    imagePullPolicy: IfNotPresent
    ports:
    {{- range $port := .Ports }}
    - name: {{ $port.Name }}
      containerPort: {{ $port.ContainerPort }}
    {{- end}}
    {{- range $port := .Ports }}
    {{- if eq $port.Name "server-port" }}  
    livenessProbe:
      tcpSocket:
        port: {{ $port.ContainerPort }}
      failureThreshold: 3
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1
    readinessProbe:
      tcpSocket:
        port: {{ $port.ContainerPort }}
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 5
      timeoutSeconds: 1
    {{- end }}
    {{- end }}
    {{- if .Resources }}
    resources:
      {{- if .Resources.Limits }}
      limits:
        {{- if .Resources.Limits.Cpu }}
        cpu: {{ .Resources.Limits.Cpu }}
        {{- end }}
        {{- if .Resources.Limits.Memory }}
        memory: {{ .Resources.Limits.Memory }}
        {{- end }}
      {{- end }}
      {{- if .Resources.Requests }}
      requests:
        {{- if .Resources.Requests.Cpu }}
        cpu: {{ .Resources.Requests.Cpu }}
        {{- end }}
        {{- if .Resources.Requests.Memory }}
        memory: {{ .Resources.Requests.Memory }}
        {{- end }}
      {{- end }}
    {{- end }}
    volumeMounts:
    {{- if not (and  .ArtifactRequest (eq .ArtifactRequest.VolumeMountPath "/data")) }}
    - name: data-volume
      mountPath: /data
    {{ end }}
    {{- if .CertificateSecret }}
    - name: {{ .CertificateSecret }}
      mountPath: /etc/certs
    {{- end }}
    {{- if .ArtifactRequest }}
      {{- if and .ArtifactRequest.VolumeMountPath .ArtifactRequest.StorageClassName }}
    - name: artifact-volume
      mountPath: {{ .ArtifactRequest.VolumeMountPath }}
      {{- end }}
    {{- end }}
    {{- range $configmap := .EnvConfigMaps }}
    {{- if and $configmap.Mount $configmap.Reference }}
    - name: {{ $configmap.Reference.Name }}
      mountPath: {{ $configmap.MountPath }}
    {{- end }}
    {{- end }}
    {{- range $secret := .EnvSecrets }}
    {{- if and $secret.Mount $secret.Reference }}
    - name: {{ $secret.Reference.Name }}
      mountPath: {{ $secret.MountPath }}
    {{- end }}
    {{- end }}
  volumes:
  {{- if not (and  .ArtifactRequest (eq .ArtifactRequest.VolumeMountPath "/data")) }}
  - name: data-volume
    emptyDir: {}
  {{ end }}
  {{- if .CertificateSecret }}
  - name: {{ .CertificateSecret }}
    secret:
      secretName: {{ .CertificateSecret }}
  {{- end }}
  {{- if .ArtifactRequest }}
    {{- if and .ArtifactRequest.VolumeMountPath .ArtifactRequest.StorageClassName }}
  - name: artifact-volume
    persistentVolumeClaim:
      claimName: {{ .JobName }}-pvc
    {{- end }}
  {{- end }}
  {{- range $configmap := .EnvConfigMaps }}
  {{- if and $configmap.Mount $configmap.Reference }}
  - name: {{ $configmap.Reference.Name }}
    configmap:
      name: {{ $configmap.Reference.Name }}
  {{- end }}
  {{- end }}
  {{- range $secret := .EnvSecrets }}
  {{- if and $secret.Mount $secret.Reference }}
  - name: {{ $secret.Reference.Name }}
    secret:
      secretName: {{ $secret.Reference.Name }}
  {{- end }}
  {{- end }}
  restartPolicy: Always
  {{- if .ServiceAccountName }}
  serviceAccountName: {{ .ServiceAccountName }}
  {{- end }}
  {{- if gt (len .ImagePullSecrets) 0 }}
  imagePullSecrets:
  {{- range $secret := .ImagePullSecrets }}
  - name: {{ $secret -}}
  {{- end }}
  {{- end }}
