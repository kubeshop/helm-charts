# Default values for testkube-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: kubeshop/testkube-api-server
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  # tag: "1.6.3"

imagePullSecrets: []
nameOverride: "api-server"
fullnameOverride: "testkube-api-server"

mongodb:
  dsn: "mongodb://testkube-mongodb:27017"
  # or use dsn in secrets
  # secretName: testkube-secrets
  # secretKey: mongo-dsn
postmanExecutorURI: "http://testkube-postman-executor:8082"

analyticsEnabled: true
slackToken: ""

# base64 encoded executors.json alike data
executors: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
# fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 8088

nats:
  enabled: true
  uri: "nats://testkube-nats"
  # or load URI from secrets
  # secretName: XXX
  # secretKey: XXX

minio:
  enabled: true
  nodeSelector: {}
  tolerations: []
  affinity: {}
  image: minio/minio:latest
  serviceAccountName: ""

uiIngress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
    # github oauth annotations (empty by default)
    # nginx.ingress.kubernetes.io/auth-url: "http://$host/oauth2/auth"
    # nginx.ingress.kubernetes.io/auth-signin: "http://$host/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-url: ""
    nginx.ingress.kubernetes.io/auth-signin: ""
  path: /results/(v\d/executions.*)
  # Hostnames must be provided if Ingress is enabled.
  hosts:
    []
  # - testkube.example.com
  tlsenabled: false
  # Placing a host in the TLS config will indicate a certificate should be created
  tls:
    []
    # - hosts:
    #     - testkube.example.com
  #   secretName: testkube-cert-secret

cliIngress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-CLI-Ingress: true";
  # Parameters to check oauth token (by default github one)
  oauth:
    clientID: ""
    clientSecret: ""
    provider: "github"
    scopes: ""
  path: /results/(v\d/.*)
  # Hostnames must be provided if Ingress is enabled.
  hosts:
    []
  # - testkube.example.com
  tlsenabled: false
  # Placing a host in the TLS config will indicate a certificate should be created
  tls:
    []
    # - hosts:
    #     - testkube.example.com
  #   secretName: testkube-cert-secret

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
storage:
  endpoint: ""
  endpoint_port: "9000"
  accessKeyId: "minio"
  accessKey: "minio123"
  location: ""
  token: ""
  SSL: false
  scrapperEnabled: true

prometheus:
  enabled: false
