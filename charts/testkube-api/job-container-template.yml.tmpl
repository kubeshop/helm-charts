apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Name }}"
  namespace: {{ .Namespace }}
spec:
  {{- if gt .ActiveDeadlineSeconds 0 }}
  activeDeadlineSeconds: {{ .ActiveDeadlineSeconds }}
  {{- end }}
  template:
    spec:
      {{- if ne .InitImage "" }}
      initContainers:
      - name: {{ .Name }}-init
        {{- if .Registry }}
        image: {{ .Registry }}/{{ .InitImage }}
        {{- else }}
        image: {{ .InitImage }}
        {{- end }}
        imagePullPolicy: IfNotPresent
        command:
          - "/bin/runner"
          - '{{ .Jsn }}'
        volumeMounts:
        {{- if not (and  .ArtifactRequest (eq .ArtifactRequest.VolumeMountPath "/data")) }}
        - name: data-volume
          mountPath: /data
        {{ end }}
        {{- if .CertificateSecret }}
        - name: {{ .CertificateSecret }}
          mountPath: /etc/certs
        {{- end }}
        {{- if .ArtifactRequest }}
          {{- if and .ArtifactRequest.VolumeMountPath .ArtifactRequest.StorageClassName }}
        - name: artifact-volume
          mountPath: {{ .ArtifactRequest.VolumeMountPath }}
          {{- end }}
        {{- end }}
        {{- if .VolumeRequest }}
          {{- if and .VolumeRequest.VolumeMountPath .VolumeRequest.StorageClassName }}
        - name: storage-volume
          mountPath: {{ .VolumeRequest.VolumeMountPath }}
          {{- end }}
        {{- end }}
        {{- range $configmap := .EnvConfigMaps }}
        {{- if and $configmap.Mount $configmap.Reference }}
        - name: {{ $configmap.Reference.Name }}
          mountPath: {{ $configmap.MountPath }}
        {{- end }}
        {{- end }}
        {{- range $secret := .EnvSecrets }}
        {{- if and $secret.Mount $secret.Reference }}
        - name: {{ $secret.Reference.Name }}
          mountPath: {{ $secret.MountPath }}
        {{- end }}
        {{- end }}
      {{- end }}
      containers:
      {{ if .Features.LogsV2 -}}
      - name: "{{ .Name }}-logs"
        {{- if .Registry }}
        image: {{ .Registry }}/{{ .LogSidecarImage }}
        {{- else }}
        image: {{ .LogSidecarImage }}
        {{- end }}
        imagePullPolicy: IfNotPresent
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DEBUG
          value: {{ if .Debug }}"true"{{ else }}"false"{{ end }}
        - name: NAMESPACE
          value: {{ .Namespace }}
        - name: NATS_URI
          value: {{ .NatsUri }}
        - name: GROUP
          value: test
        - name: SOURCE
          value: "job-pod:{{ .Name }}"
        - name: ID
          value: "{{ .Name }}"
      {{- end }}
      - name: "{{ .Name }}"
        {{- if .Registry }}
        image: {{ .Registry }}/{{ .Image }}
        {{- else }}
        image: {{ .Image }}
        {{- end }}
        imagePullPolicy: IfNotPresent
        {{- if gt (len .Command) 0 }}
        command:
        {{- range $cmd := .Command }}
        - {{ $cmd -}}
        {{- end }}
        {{- end -}}
        {{- if gt (len .Args) 0 }}
        args:
        {{- range $arg := .Args }}
        - {{ $arg -}}
        {{- end }}
        {{- end }}
        {{- if .WorkingDir }}
        workingDir: {{ .WorkingDir }}
        {{- end }}
        volumeMounts:
        {{- if not (and  .ArtifactRequest (eq .ArtifactRequest.VolumeMountPath "/data")) }}
        - name: data-volume
          mountPath: /data
        {{ end }}
        {{- if .CertificateSecret }}
        - name: {{ .CertificateSecret }}
          mountPath: /etc/certs
        {{- end }}
        {{- if .AgentAPITLSSecret }}
        - mountPath: /tmp/agent-cert
          readOnly: true
          name: {{ .AgentAPITLSSecret }}
        {{- end }}
        {{- if .ArtifactRequest }}
          {{- if and .ArtifactRequest.VolumeMountPath .ArtifactRequest.StorageClassName }}
        - name: artifact-volume
          mountPath: {{ .ArtifactRequest.VolumeMountPath }}
          {{- end }}
        {{- end }}
        {{- if .VolumeRequest }}
          {{- if and .VolumeRequest.VolumeMountPath .VolumeRequest.StorageClassName }}
        - name: storage-volume
          mountPath: {{ .VolumeRequest.VolumeMountPath }}
          {{- end }}
        {{- end }}
        {{- range $configmap := .EnvConfigMaps }}
        {{- if and $configmap.Mount $configmap.Reference }}
        - name: {{ $configmap.Reference.Name }}
          mountPath: {{ $configmap.MountPath }}
        {{- end }}
        {{- end }}
        {{- range $secret := .EnvSecrets }}
        {{- if and $secret.Mount $secret.Reference }}
        - name: {{ $secret.Reference.Name }}
          mountPath: {{ $secret.MountPath }}
        {{- end }}
        {{- end }}
      volumes:
      {{- if not (and  .ArtifactRequest (eq .ArtifactRequest.VolumeMountPath "/data")) }}
      - name: data-volume
        emptyDir: {}
      {{ end }}
      {{- if .CertificateSecret }}
      - name: {{ .CertificateSecret }}
        secret:
          secretName: {{ .CertificateSecret }}
      {{- end }}
      {{- if .AgentAPITLSSecret }}
      - name: { { .AgentAPITLSSecret } }
        secret:
          secretName: {{ .AgentAPITLSSecret }}
      {{- end }}
      {{- if .ArtifactRequest }}
        {{- if and .ArtifactRequest.VolumeMountPath .ArtifactRequest.StorageClassName }}
      - name: artifact-volume
        persistentVolumeClaim:
          claimName: {{ .Name }}-pvc
        {{- end }}
      {{- end }}
      {{- if .VolumeRequest }}
        {{- if and .VolumeRequest.VolumeMountPath .VolumeRequest.StorageClassName }}
      - name: storage-volume
        persistentVolumeClaim:
          claimName: {{ .Name }}-storage-pvc
        {{- end }}
      {{- end }}
      {{- range $configmap := .EnvConfigMaps }}
      {{- if and $configmap.Mount $configmap.Reference }}
      - name: {{ $configmap.Reference.Name }}
        configmap:
          name: {{ $configmap.Reference.Name }}
      {{- end }}
      {{- end }}
      {{- range $secret := .EnvSecrets }}
      {{- if and $secret.Mount $secret.Reference }}
      - name: {{ $secret.Reference.Name }}
        secret:
          secretName: {{ $secret.Reference.Name }}
      {{- end }}
      {{- end }}
      restartPolicy: Never
      {{- if .ServiceAccountName }}
      serviceAccountName: {{ .ServiceAccountName }}
      {{- end }}
      {{- if gt (len .ImagePullSecrets) 0 }}
      imagePullSecrets:
      {{- range $secret := .ImagePullSecrets }}
      - name: {{ $secret -}}
      {{- end }}
      {{- end }}
  backoffLimit: 0
  ttlSecondsAfterFinished: {{ .DelaySeconds }}
