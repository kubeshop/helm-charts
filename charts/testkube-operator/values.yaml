# Default values for testkube-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

### @section  Global image parameters
## Global Docker image registry
## Global Docker registry secret names as an array
## Labels to add to all deployed objects
## Annotations to add to all deployed objects
global:
  imageRegistry: ""
  imagePullSecrets: []
  labels: {}
  annotations: {}
  ## Toggle and define pod-level security context.

### @section Common parameters
## Kubernetes version (using Helm capabilities if not set)
kubeVersion: ""

## Should we install CRDS - when they can be installed from other Testkube instance
installCRD: true

## Additional labels for Testkube Operator pod
podLabels: {}

## Number of Testkube Operator Pod replicas
replicaCount: 1

## Namespace to install Testkube Operator
namespace: ""

## Chart parameters
## nameOverride Overrides Chart name
## fullnameOverride Full name that overrides Chart name
nameOverride: ""
fullnameOverride: ""

### @section Specific parameters
## image.registry Testkube Operator image registry
## image.repository Testkube Operator image name
## image.tag Testkube Operator image tag
## image.pullPolicy Testkube Operator Image pull policy
## image.digest Testkube Operator image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag

image:
  registry: docker.io
  repository: kubeshop/testkube-operator
  pullPolicy: ""
  # Overrides the image tag whose default is the chart appVersion.
  #tag: "1.7.1"
  digest: ""

##Proxy Image parameters
## image.registry Proxy image registry
## image.repository Proxy image name
## image.tag Proxy image tag
## image.pullPolicy Proxy Image pull policy
proxy:
  image:
    registry: gcr.io
    repository: kubebuilder/kube-rbac-proxy
    tag: "v0.8.0"
    pullPolicy: IfNotPresent
  ## Resources limits and requests for kube-rbac-proxy container
  resources: {}

## Testkube Operator full name
apiFullname: "testkube-api-server"
## Testkube Operator port
apiPort: 8088
## Testkube Operator healthcheck port
healthcheckPort: 8081

## Service Account parameters
serviceAccount:
  ## Specifies whether a service account should be created
  create: true
  ## Annotations to add to the service account
  annotations: {}
  ## The name of the service account to use.
  ## If not set and create is true, a name is generated using the fullname template
  name: ""

## Extra environment variables to be set on deployment
## For example:
extraEnvVars: []
#  - name: FOO
#    value: BAR

## Liveness probe configuration
livenessProbe:
  initialDelaySeconds: 3
  periodSeconds: 10

## Readiness probe configuration
readinessProbe:
  initialDelaySeconds: 3
  periodSeconds: 10

##Name of the metrics server. If not specified, default name from the template is used
metricsServiceName: ""

## Terminating a container that failed its liveness or startup probe after 10s
terminationGracePeriodSeconds: 10

## Testkube Operator Pod Security Context
podSecurityContext: {}
#  runAsUser: 1000670000
#  runAsNonRoot: true

## Configure Security Context for Manager Container
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
##
securityContext: {}
#  readOnlyRootFilesystem: true
#  allowPrivilegeEscalation: false
#  seccompProfile:
#    type: RuntimeDefault
#  capabilities:
#    drop:
#      - ALL

## Testkube Operator Pod Volume
volumes:
  secret:
    defaultMode: 420

## Webhook parameters
webhook:
  ## Use webhook
  enabled: true
  ## Name of the webhook
  name: webhook-admission
  ## Webhook specific labels
  labels: {}
  ## Webhook specific annotations
  annotations: {}

  ## Migrate Job parameters
  migrate:
    ## Deploy Migrate Job
    enabled: true
    ## image.registry Migrate container job image registry
    ## image.repository Migrate container job image name
    ## image.tag Migrate container job image tag
    ## image.pullPolicy Migrate container job image pull policy
    image:
      registry: docker.io
      repository: rancher/kubectl
      tag: v1.23.7
      pullPolicy: Always
    ## Configure Security Context for Migrate Container
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ##
    securityContext: {}
#      readOnlyRootFilesystem: true
#      allowPrivilegeEscalation: false
#      seccompProfile:
#        type: RuntimeDefault
#      capabilities:
#        drop:
#          - ALL
    ## Number of retries before considering a Job as failed
    backoffLimit: 1
    ## Resources limits and requests
    resources: {}

  ## Patch Job parameters
  patch:
    enabled: true
    ## image.registry patch container job image registry
    ## image.repository patch container image name
    ## image.tag pathc container image tag
    ## image.pullPolicy patch container image pull policy
    image:
      registry: docker.io
      repository: dpejcev/kube-webhook-certgen
      tag: 1.0.11
      pullPolicy: IfNotPresent
    ## Annotations to add to the patch Job
    annotations: {}
    ## Pod annotations to add to the patch Job
    podAnnotations: {}
    ## Pod specific labels
    labels: {}
    ## Configure Security Context for Migrate Container
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ##
    podSecurityContext: {}
#      runAsUser: 1000670000
#      runAsNonRoot: true

    createSecretJob:
      ## Create Secret job container security context
      securityContext: {}
#        readOnlyRootFilesystem: true
#        allowPrivilegeEscalation: false
#        seccompProfile:
#          type: RuntimeDefault
#        capabilities:
#          drop:
#            - ALL
      ## Create Secret resource requests and limits
      resources: {}

    patchWebhookJob:
      ## Patch Webhook job container security context
      securityContext: {}
#        readOnlyRootFilesystem: true
#        allowPrivilegeEscalation: false
#        seccompProfile:
#          type: RuntimeDefault
#        capabilities:
#          drop:
#            - ALL
      ## Patch Webhook resource requests and limits
      resources: {}

    ## Name of the SA to use by patch Job
    serviceAccount:
      ## SA specific annotations
      annotations: {}
      ## SA name
      name: testkube-operator-webhook-cert-mgr
    ##Node labels for pod assignment
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector:
      kubernetes.io/os: linux
    ## tolerations Tolerations for pod assignment
    ### Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ###
    tolerations: []
    ## Number of retries before considering a Job as failed
    backoffLimit: 1

  ## Webhook certificate
  certificate:
    ## Webhook certificate secret name
    secretName: webhook-server-cert

## Create RBAC roles for users and controller
rbac:
  create: true

## Service Parameters
service:
  ## Adapter service type
  type: ClusterIP
  ## HTTP Port
  port: 80
  ## Annotations
  annotations: {}

## Testkube Operator resource requests and limits
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#  limits:
#    cpu: 100m
#    memory: 128Mi
#  requests:
#    cpu: 100m
#    memory: 128Mi

## Node labels for Testkube Operator pod assignment.
nodeSelector: {}

## Tolerations for Testkube Operator  assignment.
tolerations: []

## Affinity for Testkube Operator pod assignment.
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
affinity: {}

##Test Connection pod
testConnection:
  enabled: false

preUpgrade:
  # -- Upgrade hook is enabled
  enabled: true
  # -- Specify image
  image:
    registry: k8s.gcr.io
    repository: hyperkube
    tag: v1.12.1
    pullPolicy: IfNotPresent
  # -- Specify resource limits and requests
  resources: {}
  # -- Create SA for upgrade hook
  serviceAccount:
    create: true
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  # -- Upgrade Pod Security Context
  podSecurityContext: {}
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  # -- Security Context for Upgrade kubectl container
  securityContext: {}
  # ref: https://cloud.google.com/kubernetes-engine/docs/how-to/prepare-arm-workloads-for-deployment#node-affinity-multi-arch-arm
  # -- Tolerations to schedule a workload to nodes with any architecture type. Required for deployment to GKE cluster.
  tolerations:
    - key: kubernetes.io/arch
      operator: Equal
      value: arm64
      effect: NoSchedule
