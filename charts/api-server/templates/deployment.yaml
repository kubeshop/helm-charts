apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api-server.fullname" . }}
  labels:
    {{- include "api-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "api-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "api-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: testkube-api-server-{{ .Release.Name }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
          - name: APISERVER_PORT
            value: "{{ .Values.service.port }}"
          - name: API_MONGO_DSN
            value: "{{ .Values.mongoDSN }}"
          - name: POSTMANEXECUTOR_URI
            value: "{{ .Values.postmanExecutorURI }}"
          - name: TESTKUBE_TELEMETRY_DISABLED
            value: "{{ .Values.telemetryDisabled }}"
          - name: "STORAGE_ENDPOINT"
            value:  "testkube-minio-service-{{ .Release.Namespace }}:{{ .Values.storage.endpoint_port }}"
          - name: "STORAGE_ACCESSKEYID"
            value:  "{{ .Values.storage.accessKeyId }}"
          - name: "STORAGE_SECRETACCESSKEY"
            value: "{{ .Values.storage.accessKey }}"
          - name: "STORAGE_LOCATION"
            value: "{{ .Values.storage.location }}"
          - name: "STORAGE_TOKEN"
            value: "{{ .Values.storage.token }}"
          - name: "STORAGE_SSL"
            value:  "{{ .Values.storage.SSL }}"
          - name: "SCRAPPERENABLED"
            value:  "{{ .Values.storage.scrapperEnabled }}"

          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
