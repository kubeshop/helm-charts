name: Releasing Helm charts. Debug.

on:
  push:
    branches:
      - tarask/debug/gh_pages_status_check_fail

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER_NAME_DEV: ${{ secrets.GKE_CLUSTER_NAME_DEV }}    # Add your cluster name here.
  GKE_ZONE_DEV: ${{ secrets.GKE_ZONE_DEV }}   # Add your cluster zone here.
  DEPLOYMENT_NAME: testkube # Add your deployment name here.
  TEST_SUITE_FILE_NAME: TestKube-Sanity.postman_collection.json
  TEST_SUITE_FILE_PATH: test/e2e

jobs:

  refreshing_gh_pages:
    runs-on: ubuntu-latest
    steps:
      - name: Triggering refresh for GH-pages to make just released charts available
        run: |
          curl -s --fail --request POST \
            --url https://api.github.com/repos/kubeshop/helm-charts/pages/builds \
            --header "Authorization: Bearer $USER_TOKEN"
        env:
          # You must create a personal token with repo access as GitHub does
          # not yet support server-to-server page builds.
          USER_TOKEN: ${{ secrets.USER_TOKEN }}

  checking_that_ghpages_updated:
    needs: refreshing_gh_pages
    runs-on: ubuntu-latest
    steps:
      - name: Making sure that they are abvailable now.
        run: |
          status=""
          counter=0
          while [[ $status != \"built\" ]]
          do
              status=$(curl -s \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/kubeshop/helm-charts/pages/builds/latest \
              --header "Authorization: Bearer $USER_TOKEN" | jq .status)
              echo "Checking latest GH pages build status --> $status"
              sleep 5

              counter=$(expr $counter + 1)
              if [[ $status =~ error.* ]] || [[ $counter == 120 ]]; then
                echo Something went wrong. Please check GH's pages issues.
                exit 1
              fi
          done
        env:
          # You must create a personal token with repo access as GitHub does
          # not yet support server-to-server page builds.
          USER_TOKEN: ${{ secrets.USER_TOKEN }}
