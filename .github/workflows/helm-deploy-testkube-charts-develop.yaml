name: Releasing Testkube Helm charts to Develop k8s Cluster.

concurrency: develop_cluster

on:
  repository_dispatch:
    types:
      [
        trigger-workflow-api-develop,
        trigger-workflow-dashboard-develop,
        trigger-workflow-operator-develop,
        trigger-workflow-executor-develop
      ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME_DEVELOP }}
  GKE_ZONE: ${{ secrets.GKE_ZONE_DEVELOP }}
  DEPLOYMENT_NAME: testkube
  ENV: develop


jobs:
  release_charts_if_image_updated:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
      - run: |-
          gcloud --quiet auth configure-docker

      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER_NAME_DEVELOP }}
          location: ${{ env.GKE_ZONE_DEVELOP }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - name: Modify executors.json file if any executor Docker image was updated
        if: ${{ github.event.client_payload.image_tag_executor }}
        run: |
          export image_tag=${{ github.event.client_payload.image_tag_executor }}
          export executor_name=${{ github.event.client_payload.executor_name }}
          sed -i "s/\(.*\"image\":.*$executor_name.*\:\).*$/\1$image_tag\",/g" ./charts/testkube-api/executors.json
          cat ./charts/testkube-api/executors.json

      - name: Installing repositories
        run: |
          helm repo add bitnami https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami

      - name: Get image tag of Testkube APi, Dashboard, Operator
        id: vars
        run: |
          echo ::set-output name=api_image_tag::$(kubectl get deployment testkube-api-server -o=jsonpath='{$.spec.template.spec.containers[:1].image}' -n ${{ env.DEPLOYMENT_NAME }} | awk -F':' '{print $2}') || exit 1
          echo ::set-output name=operator_image_tag::$(kubectl get deployment testkube-operator-controller-manager -o=jsonpath='{$.spec.template.spec.containers[1].image}' -n ${{ env.DEPLOYMENT_NAME }} | awk -F':' '{print $2}') || exit 1
          echo ::set-output name=dashboard_image_tag::$(kubectl get deployment testkube-dashboard -o=jsonpath='{$.spec.template.spec.containers[:1].image}' -n ${{ env.DEPLOYMENT_NAME }} | awk -F':' '{print $2}') || exit 1

      - name: Deploy if Executors' image is update
        if: ${{ github.event.client_payload.image_tag_executor }}
        run: |
          helm dependency update ./charts/testkube
          helm upgrade --debug --install --atomic --timeout 180s ${{ env.DEPLOYMENT_NAME }} ./charts/testkube --namespace ${{ env.DEPLOYMENT_NAME }} --create-namespace  --values ./charts/testkube/values-${{ env.ENV }}.yaml  --set testkube-api.image.tag=${{ steps.vars.outputs.api_image_tag }} --set testkube-operator.image.tag=${{ steps.vars.outputs.operator_image_tag }} --set testkube-dashboard.image.tag=${{ steps.vars.outputs.dashboard_image_tag }} --set testkube-api.minio.storage=80Gi --set mongodb.livenessProbe.enabled=false --set mongodb.reasdinessProbe.enabled=false

      - name: Deploy if Testkube API image is updated
        if: ${{ github.event.client_payload.image_tag_api }}
        run: |
          helm dependency update ./charts/testkube
          helm upgrade --debug --install --atomic --timeout 180s ${{ env.DEPLOYMENT_NAME }} ./charts/testkube --namespace ${{ env.DEPLOYMENT_NAME }} --create-namespace  --values ./charts/testkube/values-${{ env.ENV }}.yaml --set testkube-api.image.tag=${{ github.event.client_payload.image_tag }} --set testkube-operator.image.tag=${{ steps.vars.outputs.operator_image_tag }} --set testkube-dashboard.image.tag=${{ steps.vars.outputs.dashboard_image_tag }}

      - name: Deploy if Testkube Dashboard image is updated
        if: ${{ github.event.client_payload.image_tag_dashboard }}
        run: |
          helm dependency update ./charts/testkube
          helm upgrade --debug --install --atomic --timeout 180s ${{ env.DEPLOYMENT_NAME }} ./charts/testkube --namespace ${{ env.DEPLOYMENT_NAME }} --create-namespace  --values ./charts/testkube/values-${{ env.ENV }}.yaml --set testkube-dashboard.image.tag=${{ github.event.client_payload.image_tag_dashboard }} --set testkube-operator.image.tag=${{ steps.vars.outputs.operator_image_tag }} --set testkube-api.image.tag=${{ steps.vars.outputs.api_image_tag }}

      - name: Deploy if Testkube Operator image is updated
        if: ${{ github.event.client_payload.image_tag_operator }}
        run: |
          helm dependency update ./charts/testkube
          helm upgrade --debug --install --atomic --timeout 180s ${{ env.DEPLOYMENT_NAME }} ./charts/testkube --namespace ${{ env.DEPLOYMENT_NAME }} --create-namespace  --values ./charts/testkube/values-${{ env.ENV }}.yaml --set testkube-operator.image.tag=${{ github.event.client_payload.image_tag_operator }} --set testkube-dashboard.image.tag=${{ steps.vars.outputs.dashboard_image_tag }} --set testkube-api.image.tag=${{ steps.vars.outputs.api_image_tag }}

  notify_slack_if_deploy_succeeds:
    runs-on: ubuntu-latest
    needs: release_charts_if_image_updated
    steps:
      - name: Slack Notification if the helm release deployment to ${{ env.ENV }} GKS succeeded.
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: testkube-logs
          SLACK_COLOR: ${{ needs.release_charts_if_image_updated.result }} # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_TITLE: Helm chart release successfully deployed into ${{ secrets.GKE_CLUSTER_NAME }} GKE :party_blob:!
          SLACK_USERNAME: GitHub
          SLACK_LINK_NAMES: true
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_FOOTER: "Kubeshop --> TestKube"

  notify_slack_if_deploy_failed:
    runs-on: ubuntu-latest
    needs: release_charts_if_image_updated
    if: always() && (needs.release_charts_if_image_updated.result == 'failure')
    steps:
      - name: Slack Notification if the helm release deployment to ${{ env.ENV }} GKS failed.
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: testkube-logs
          SLACK_COLOR: ${{ needs.release_charts_if_image_updated.result }} # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_TITLE: Helm chart release failed to deploy into ${{ secrets.GKE_CLUSTER_NAME }} GKE! :boom:!
          SLACK_USERNAME: GitHub
          SLACK_LINK_NAMES: true
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_FOOTER: "Kubeshop --> TestKube"

## Add tests
