name: Release testkube testkube chart.

on:
  push:
    paths:
      - 'charts/**'
    branches:
      - main
jobs:

  release_charts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - name: Installing repositories
        run: |
          helm repo add helm-charts https://kubeshop.github.io/helm-charts
          helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.2.1
        with:
          charts_dir:  charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          
  refreshing_gh_pages:
    needs: release_charts
    runs-on: ubuntu-latest
    steps:
      - name: Triggering refresh for GH-pages to make just released charts available
        run: |
          curl -s --fail --request POST \
            --url https://api.github.com/repos/kubeshop/helm-charts/pages/builds \
            --header "Authorization: Bearer $USER_TOKEN"
        env:
          # You must create a personal token with repo access as GitHub does
          # not yet support server-to-server page builds.
          USER_TOKEN: ${{ secrets.USER_TOKEN }}

  checking_that_ghpages_updated:
    needs: refreshing_gh_pages
    runs-on: ubuntu-latest
    steps:
      - name: Making sure that they are abvailable now.
        run: |
          status=""
          while [[ $status != \"built\" ]]
          do
              status=$(curl -s \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/kubeshop/helm-charts/pages/builds/latest \
              --header "Authorization: Bearer $USER_TOKEN" | jq .status)
              echo "Checking latest GH pages build status --> $status"
              sleep 5
          done
        env:
          # You must create a personal token with repo access as GitHub does
          # not yet support server-to-server page builds.
          USER_TOKEN: ${{ secrets.USER_TOKEN }}